name: tests

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  tests-native-arch:
    name: Run tests
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            targets: "x86_64-unknown-linux-gnu"
          - os: macos-latest
            targets: "aarch64-apple-darwin"
    steps:
    - name: Checkout the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        persist-credentials: false

    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
      with:
        toolchain: 1.87.0 # MSRV
        targets: "${{ matrix.targets }}"

    - name: Run tests
      run: |
        RUSTFLAGS="-Ctarget-cpu=native" cargo test --all

  # As of Rust 1.87, doctests aren't being run when cross-compiling,
  # keep that in mind.
  tests-qemu:
    name: Run tests in QEMU
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Big-endian arch
          - target: "s390x-unknown-linux-gnu"
          # 32-bit x86
          - target: "i686-unknown-linux-gnu"
    steps:
    - name: Checkout the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        persist-credentials: false

    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
      with:
        toolchain: 1.87.0 # MSRV
        targets: "${{ matrix.target }}"

    - name: Install Cross
      run: |
        DIR="$RUNNER_TEMP/cross"
        mkdir -p "$DIR"
        pushd "$DIR"
        curl -LO "https://github.com/cross-rs/cross/releases/download/v0.2.5/cross-x86_64-unknown-linux-musl.tar.gz"
        tar xf cross-x86_64-unknown-linux-musl.tar.gz
        mv cross "$HOME/.cargo/bin/"
        popd

    - name: Run tests
      run: |
        cross test --target="${{ matrix.target }}" --all

  tests-wasm:
    name: "Run tests on WASM (${{ matrix.label }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - label: "without SIMD"
            runner: "wasmtime run --"
            rustflags: ""
          - label: "with SIMD"
            runner: "wasmtime run --wasm simd --"
            rustflags: "-Ctarget-feature=+simd128"
    steps:
    - name: Checkout the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        persist-credentials: false

    - name: Install Rust
      uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
      with:
        toolchain: 1.87.0 # MSRV
        targets: "wasm32-wasip1"

    - name: Install Wasmtime
      run: |
        curl https://wasmtime.dev/install.sh -sSf | bash
        echo "$HOME/.wasmtime/bin" >> "$GITHUB_PATH"
        echo "CARGO_BUILD_TARGET=wasm32-wasip1" >> "$GITHUB_ENV"
        echo "CARGO_TARGET_WASM32_WASIP1_RUNNER=${{ matrix.runner }}" >> "$GITHUB_ENV"
        echo "RUSTFLAGS=${{ matrix.rustflags }}" >> "$GITHUB_ENV"

    - name: Run tests
      run: |
        sed -i '/^criterion =/d' crates/base64/Cargo.toml
        cargo test --all
